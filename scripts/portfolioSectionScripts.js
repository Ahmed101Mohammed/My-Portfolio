const autoSkillsOptionsGeneratorForFilter=()=>{let e=document.querySelector("section#portfolio div.body ul");for(skill of skills){let t=`<li>${skill.name}</li>`;e.insertAdjacentHTML("beforeend",t)}};autoSkillsOptionsGeneratorForFilter();const setHightOfThePortfolioSectionToAuto=()=>{let e=window.innerHeight,t=document.querySelector("section#portfolio");t.clientHeight>e&&(t.style.height="auto")},CreateProjectCard=(e,t,o,r,i,a,s)=>({photo:e,photoDiscription:t,gitHubRepoUrl:o,name:r,discription:i,skills:a,projectLivePageUrl:s,getHTMLCodeOfTheCard(){let e=`
                <a class="project-live-demo" target="_blank" href="${this.projectLivePageUrl}">
                    <div class="project-card">
                        <div class="photo">
                            <img src="${this.photo}" alt="${this.photoDiscription}"> 
                        </div>

                        <div class="info">
                            <a class="repo" href="${this.gitHubRepoUrl}" target="_blank">
                                <i class="fa-brands fa-github"></i>
                            </a>

                            <div class="discritpion">
                                <p class="name">${this.name}</p>
                                <p class="discription">${this.discription}</p>
                            </div>

                            <ul class="skills-tags">
                                ${this.createListItemsForEachSkill(this.skills)}
                            </ul>
                        </div>
                    </div>
                </a>
            `;return e},createListItemsForEachSkill(e){let t="";for(let o of e)t+=`<li>${o}</li>
                            `;return t},addTheCardToTheProjectsContainer(){document.querySelector("div.projects").insertAdjacentHTML("beforeend",this.getHTMLCodeOfTheCard())}}),myPortfolio=CreateProjectCard("./images/portfolio-project-photo.png","Project photo: containt image for the main page of the project, and it contain header, and nav bar, with personal photo.","https://github.com/Ahmed101Mohammed/My-Portfolio","My-Portfolio","My main portfolio projoct, as a software developer.",["HTML","CSS","JS","Git"],"https://ahmed101mohammed.github.io/My-Portfolio/"),lunchSite=CreateProjectCard("./images/LunchSite.png","Project photo: containt image for the main page of the project, and it contain white header, And Rocket logo, And the project is made with puple theme.","https://github.com/Ahmed101Mohammed/product-landing-page","LunchSite","Product-landing-page project for building site service.",["HTML","CSS","Git"],"https://ahmed101mohammed.github.io/product-landing-page/"),techDocumentation=CreateProjectCard("./images/tech-documentation.png","Project photo: containt image for the introduction part of the documentation, it's look basic with side navigation bar.","https://github.com/Ahmed101Mohammed/technical-documentation-page","Technical Documentation Page.","Technical documentaion page to learn fundamentals of programming with JS.",["HTML","CSS","Git"],"https://ahmed101mohammed.github.io/technical-documentation-page/"),myTasks=CreateProjectCard("./images/to-do-app.png","Project photo: contain image for the single page to-do app, and it's contain a header and side bar with plus sign to add new to-do list, and in the body of the project page, you can see number of default lists that already created by the me.","https://github.com/Ahmed101Mohammed/to-do-Llst-dynamic","My Tasks","Basic dynamic to-do list app.",["HTML","CSS","JS","Git"],"https://ahmed101mohammed.github.io/to-do-Llst-dynamic/"),trackAchievements=CreateProjectCard("./images/track_achievements.png","It's just image for the projecr repository in GitHub.","https://github.com/Ahmed101Mohammed/track-achievements","Track Achievements","Track your daily achievements to know your real productivity and progress. Here where you will see the real value of your habits.",["Java","SQLite","Git"],"#"),VegStore=CreateProjectCard("./images/VegStore.png","It's just image for the projecr repository in GitHub.","https://github.com/Ahmed101Mohammed/VegStore","VegStore","Application for a vegetable store with a static known number of Items to make a selling process with recording and give a receipt for the client.",["Java","SQLite","Git"],"#"),progressTracker=CreateProjectCard("./images/progress_tracker.png","It's just image for the projecr repository in GitHub.","https://github.com/Ahmed101Mohammed/progress-tracker","Progress Tracker","Progress-tracker application. to follow your goals progress.",["Python","SQLite","Git"],"#"),jsckCompiler=CreateProjectCard("./images/jack-compiler.png","It's just image for the projecr repository in GitHub.","https://github.com/Ahmed101Mohammed/Jack-compiler","Jack PL Compiler","A compiler for jack language, designed by instructors in the Nand2Tetris course.",["Java","Git"],"#"),projects=[myPortfolio,lunchSite,techDocumentation,myTasks,trackAchievements,VegStore,progressTracker,jsckCompiler],isProjectsContainerisOverFlow=()=>{let e=document.querySelector("section#portfolio div.projects"),t;return e.clientHeight<e.scrollHeight},removeLastProjectsFromProjectsContainer=()=>{let e=document.querySelector("section#portfolio div.projects"),t=e.querySelectorAll("a.project-live-demo"),o=e.querySelectorAll("div.project-card"),r=t[t.length-1],i=o[o.length-1];console.log(r,i),i.remove(),r.remove()},seeMoreProjects=e=>{let t=document.querySelector("section#portfolio"),o=t.clientHeight;console.log({portfolioSectionHight:o});document.querySelector("section#portfolio div.projects").remove();let r=document.createElement("div");r.setAttribute("class","projects");document.querySelector("section#portfolio").insertAdjacentElement("beforeend",r);let i=window.innerHeight;console.log({dvh:i}),t.style.height=o+i+"px",addProjectsToTheDom(e),setHTMLAndBodyHeight()},addMoreButtonToProjectsContainer=e=>{let t='<button class="more-button more-projects">more projects</button>';document.querySelector("section#portfolio div.projects").insertAdjacentHTML("beforeend",t);document.querySelector("button.more-projects").addEventListener("click",()=>seeMoreProjects(e))},addProjectsToTheDom=e=>{let t=0,o=e;for(;!isProjectsContainerisOverFlow()&&t<o.length;)o[t].addTheCardToTheProjectsContainer(),t++;isProjectsContainerisOverFlow()?(console.log("There is overFlow"),removeLastProjectsFromProjectsContainer(),addMoreButtonToProjectsContainer(o)):setHightOfThePortfolioSectionToAuto()};addProjectsToTheDom(projects);const repleaceTheFilterTitleToChoosenSkill=e=>{if("LI"==e.nodeName||"P"==e.nodeName){let t=e.textContent;document.querySelector("section#portfolio div.filter div.head p").textContent=t}},appearTheProjectsBuiltOnTheSkill=e=>{if("LI"==e.nodeName||"P"==e.nodeName){let t=document.querySelector("section#portfolio div.projects");t.remove();let o=document.querySelector("section#portfolio");o.insertAdjacentHTML("beforeend",'<div class="projects"> </div>');let r=e.textContent.trim();console.log("skillTextContent:",r);let i="All"===r?projects:projects.filter(e=>-1!==e.skills.indexOf(r));console.log(i),addProjectsToTheDom(i)}};let fileterElements=document.querySelector("section#portfolio div.filter ul");fileterElements.addEventListener("click",e=>{let t=e.target;repleaceTheFilterTitleToChoosenSkill(t),appearTheProjectsBuiltOnTheSkill(t)});